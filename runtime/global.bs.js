// Generated by ReScript, PLEASE EDIT WITH CARE
'use strict';

var Values = require("../syntax/values.bs.js");
var Caml_obj = require("rescript/lib/js/caml_obj.js");
var Caml_exceptions = require("rescript/lib/js/caml_exceptions.js");

var Type = /* @__PURE__ */Caml_exceptions.create("Global.Type");

var NotMutable = /* @__PURE__ */Caml_exceptions.create("Global.NotMutable");

function alloc(ty, v) {
  if (Caml_obj.caml_notequal(Values.type_of_value(v), ty._0)) {
    throw {
          RE_EXN_ID: Type,
          Error: new Error()
        };
  }
  return {
          ty: ty,
          content: v
        };
}

function type_of(glob) {
  return glob.ty;
}

function load(glob) {
  return glob.content;
}

function store(glob, v) {
  var match = glob.ty;
  if (match._1 !== /* Mutable */1) {
    throw {
          RE_EXN_ID: NotMutable,
          Error: new Error()
        };
  }
  if (Caml_obj.caml_notequal(Values.type_of_value(v), match._0)) {
    throw {
          RE_EXN_ID: Type,
          Error: new Error()
        };
  }
  glob.content = v;
  
}

exports.Type = Type;
exports.NotMutable = NotMutable;
exports.alloc = alloc;
exports.type_of = type_of;
exports.load = load;
exports.store = store;
/* Values Not a pure module */
