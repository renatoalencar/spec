// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from "rescript/lib/es6/curry.js";
import * as Printf from "rescript/lib/es6/printf.js";
import * as Caml_obj from "rescript/lib/es6/caml_obj.js";

function $at$at(x, region) {
  return {
          at: region,
          it: x
        };
}

function at(region, x) {
  return {
          at: region,
          it: x
        };
}

var no_pos = {
  file: "",
  line: 0,
  column: 0
};

var no_region = {
  left: no_pos,
  right: no_pos
};

function string_of_pos(pos) {
  if (pos.line === -1) {
    return Curry._1(Printf.sprintf(/* Format */{
                    _0: {
                      TAG: /* String_literal */11,
                      _0: "0x",
                      _1: {
                        TAG: /* Int */4,
                        _0: /* Int_x */6,
                        _1: /* No_padding */0,
                        _2: /* No_precision */0,
                        _3: /* End_of_format */0
                      }
                    },
                    _1: "0x%x"
                  }), pos.column);
  } else {
    return String(pos.line) + ("." + String(pos.column + 1 | 0));
  }
}

function string_of_region(r) {
  return r.left.file + (":" + (string_of_pos(r.left) + (
              Caml_obj.caml_equal(r.right, r.left) ? "" : "-" + string_of_pos(r.right)
            )));
}

export {
  no_pos ,
  no_region ,
  string_of_pos ,
  string_of_region ,
  $at$at ,
  at ,
  
}
/* No side effect */
